[project]
# PEP 621 project metadata
# See https://www.python.org/dev/peps/pep-0621/
authors = [
    {name = "BlueGlassBlock", email = "blueglassblock@outlook.com"},
]
license = {text = "MIT"}
requires-python = ">=3.8,<4.0"
dependencies = [
    "pydantic<2.0.0,>=1.8.0",
    "importlib-metadata>=3.6",
    "loguru>=0.6.0",
]
name = "kayaku"
version = "0.4.0rc1"
description = "An powerful and flexible configuration solution."
readme = "README.md"
classifiers = [
"Typing :: Typed",
"Development Status :: 4 - Beta",
"Operating System :: OS Independent"
]

[project.urls]

[project.optional-dependencies]
[tool.pdm]
includes = ["kayaku"]
[tool.pdm.scripts]
test = {composite = ["coverage run -m pytest", "coverage xml", "coverage report"]}
[tool.pdm.dev-dependencies]
dev = [
    "black<23.0.0,>=22.3.0",
    "isort<6.0.0,>=5.10.1",
    "pytest>=7.1.3",
    "coverage>=6.4.4",
    "rich~=12.5",
    "lark[regex]>=1.1",
]
[build-system]
requires = ["pdm-pep517"]
build-backend = "pdm.pep517.api"


[tool.coverage.run]
branch = true
source = ["."]
omit = ["tests/*", "test.py"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # standard pragma
    "pragma: no cover",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "if (typing\\.)?TYPE_CHECKING( is True)?:",
    "\\.\\.\\.",
    "pass",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    # Don't complain overload method / functions
    "@(typing\\.)?overload",
    # don't complain __repr__ and __str__ and __repr_args__ for representation
    "def __repr__",
    "def __str__",
    "def __repr_args__",
    "except ImportError:", # Don't complain about import fallback
]
partial_branches = [
    "pragma: worst case"
]
precision = 2

[tool.pytest.ini_options]
python_files = "tests/*"

[tool.pyright]
ignore = [
    "./tests"
]